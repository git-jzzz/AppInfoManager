<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	  xmlns:aop="http://www.springframework.org/schema/aop"
	  xmlns:tx="http://www.springframework.org/schema/tx"    
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd   
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd 
	">
	<context:component-scan base-package="cn.appinfo.mapper"/>
	<context:component-scan base-package="cn.appinfo.service"/>

	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://localhost:3306/appinfodb"/>
		<property name="username" value="root"/>
		<property name="password" value="root"/>
	</bean>
<bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
	<property name="dataSource" ref="dataSource" />
	<property name="typeAliasesPackage" value="cn.appinfo.pojo" />
</bean>

	<!--redis配置-->
	<!-- jedis 配置 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig" >
		<property name="maxActive" value="${redis.maxActive}"></property>
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxWait" value="${redis.maxWait}" />
		<property name="testOnBorrow" value="true" />
	</bean >
	<context:property-placeholder location="classpath:redis.properties" />
	<bean id="jedisPool" class="redis.clients.jedis.JedisPool" destroy-method="destroy">
		<constructor-arg  ref="jedisPoolConfig" />
		<constructor-arg value="${redis.host}"></constructor-arg>
		<constructor-arg value="${redis.port}"></constructor-arg>
		<constructor-arg value="${redis.timeout}"></constructor-arg>
		<constructor-arg value="${redis.password}"></constructor-arg>
		<constructor-arg value="0"></constructor-arg>

	</bean>
	<bean id="redisAPI" class="cn.appinfo.util.RedisApi">
		<property name="jedisPool" ref="jedisPool"></property>
	</bean>
	<!-- AOP 事务处理 开始 -->
<!--
	<aop:config  proxy-target-class="true">
		<aop:pointcut expression="execution(* *cn.appinfo.service..*(..))" id="transService"/>
		<aop:advisor pointcut-ref="transService" advice-ref="txAdvice" />
	</aop:config> 
	<tx:advice id="txAdvice" transaction-manager="transactionManager">  
	    <tx:attributes>  
	       <tx:method name="*"  propagation="REQUIRED" rollback-for="Exception"  />
	    </tx:attributes>  
	</tx:advice> -->
	<!-- AOP 事务处理 结束 -->

<!-- 注入dao -->
<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	<property name="basePackage" value="cn.appinfo.mapper"></property>
</bean>

</beans>